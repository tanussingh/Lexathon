.data
prompt:	.asciiz     "Enter word: "
nemsg:	.asciiz     "Invalid word\n"
end: .asciiz "word not in list\n"
correct: .asciiz "Correct\n"
fin :	.asciiz "words.txt"
period: .asciiz "."
endoffile: .asciiz "/"

input:	.space      80
buffer:	.space      800000000

    .text


main:
	addi $s3, $s3, 0 #initialize counter
	la      $s2,input #get buffer addresss
	move    $t2,$s2
	
	la $s2, buffer
	move $t3, $s2
	
	lb $t6, period
	#addi $t7, $t7, -1 #initialize input pointer
	lb $s7, endoffile #slash
	addi $s4, $zero, 0
readFile:
	#open a file for writing
	li   $v0, 13       # system call for open file
	la   $a0, fin      # board file name
	li   $a1, 0        # Open for reading
	li   $a2, 0
	syscall            # open a file (file descriptor returned in $v0)
	move $s6, $v0      # save the file descriptor 
	
	#read from file
	move $a0, $v0      # file descriptor 
	li   $v0, 14       # system call for read from file
	la   $a1, buffer   # address of buffer to which to read
	move $t3, $a1
	li  $a2, 100000000
	syscall            # read from file
	

getInput:   
   	addi $t7, $zero, -1  #initialize input pointer
   	la      $a0,prompt  #as user to enter string
    	li      $v0,4
    	syscall

    	move    $a0,$t2 #read in string
    	li      $a1,50
    	li      $v0,8
    	syscall


cmploop:
	#beq     $t5,$t6,Match 
	addi 	$t7, $t7, 1		#add one to input counter
	lb      $t4,($t2)                   # get next char from str1	
	lb      $t5,($t3)                   # get next char from file
	beq 	$t5, $s7, notFound
	beq     $t5,$t6,Match             # check if period
	#bne 	$t5, $s7, noMatchEmpty
	bne     $t4,$t5,noMatch             # no match

	
	addi    $t2,$t2,1                   # point to next char
    	addi    $t3,$t3,1                   # point to next char
    	#addi $s4, $s4,1
    	#beq     $t5,$t6,Match             # end of string
    	j       cmploop

noMatch:
    	beq     $t5,$t6,cmploop             # end of string
    	la      $a0,nemsg
    	li      $v0,4
    	syscall
    	sub $t2, $t2, $t7 #set input address back to beginning of input string
    	addi $t7, $zero, -1 #set input counter back to zero
    	j whattodoperiod
    	#add $a0, $zero,$zero
    	#j       getInput
    	
whattodoperiod:
	#sub $t2, $t2, $t7 #set input address back to beginning of input string
	addi    $t3,$t3,1	# move pointer in file buffer until it hits a period
	lb      $t5,($t3)    	# get next char from str2
	#addi $s4, $s4, 1
	beq	$t5, $t6,periodEqual	#if where the pointer is equal to period, go back to loop
	j whattodoperiod	#if pointer is not equal to period then loop again
	
periodEqual:
	addi    $t3,$t3,1	# move pointer in file buffer to kove past period
	j cmploop

Match:
    	la      $a0,correct
    	li      $v0,4
    	syscall
    	addi $s3, $s3, 1 #add one to total score
    	add $a0, $zero,$zero
    	#addi    $t3,$t3,1                   # point to next char
    	j Exit
	#j       getInput
notFound:
	li $v0,4
	la $a0, end
	syscall
	
	li $v0, 1       
	move $a0, $s3       # $integer to print
	syscall 
	move $t3, $zero
	la $t3, buffer
	
	j getInput
	li $v0, 10
	syscall	       


Exit:
	li $v0, 1       
	move $a0, $s3       # $integer to print
	syscall 
	move $t3, $zero
	la $t3, buffer
	#addi    $t3,$t3,1	# move pointer in file buffer until it hits a period
	#sub $t3, $t3, $s4
	j getInput
	li $v0, 10
	syscall
	

	
	
